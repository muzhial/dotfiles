
#ARG TORCH="1.11.0"
#ARG CUDA="11.3"
#ARG CUDNN="8"
#FROM pytorch/pytorch:${TORCH}-cuda${CUDA}-cudnn${CUDNN}-devel

FROM nvidia/cuda:11.3.0-cudnn8-devel-ubuntu20.04

ARG sudo=''

## add user
# ARG USERNAME=muzhi
# ARG USER_UID=1000
# ARG USER_GID=0
# # RUN groupadd --gid $USER_GID $USERNAME \
# RUN useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
#     && apt-get update \
#     && apt-get install -y sudo wget \
#     && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
#     && chmod 0440 /etc/sudoers.d/$USERNAME
#     # Clean up
#     # && apt-get autoremove -y \
#     # && apt-get clean -y \
#     # && rm -rf /var/lib/apt/lists/*

# USER $USERNAME

ENV DEBIAN_FRONTEND=noninteractive
# RUN DEBIAN_FRONTEND=noninteractive apt install -y tzdata

RUN $sudo apt update --allow-insecure-repositories \
    && $sudo apt install -y \
    build-essential \
    ca-certificates \
    cmake \
    git cmake curl wget \
    openssh-server \
    libgl1-mesa-glx \
    sudo \
    zlib1g-dev \
    libncurses-dev \
    zip unzip \
    libpng-dev libjpeg-dev \
    zsh \
    && $sudo apt clean \
    && $sudo rm -rf /var/lib/apt/lists/*

# Fix: W: GPG error:xxx, InRelease: The following signatures
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys  A4B469963BF863CC

## neovim
#RUN $sudo apt update \
#    && $sudo apt install -y software-properties-common \
#    && $sudo add-apt-repository ppa:neovim-ppa/unstable \
#    && $sudo apt update \
#    && $sudo apt install neovim -y \
#    && $sudo apt clean \
#    && $sudo rm -rf /var/lib/apt/lists/*

ENV PATH /opt/conda/bin:$PATH
#ENV NVIDIA_VISIBLE_DEVICES all
#ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
#ENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64
#ENV PYTORCH_VERSION ${PYTORCH_VERSION}

ARG PYTHON_VERSION=3.8


# zsh
RUN chsh -s $(which zsh) \
    && usermod -s $(which zsh) $(whoami) \
    && sh -c "$(curl https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" --unattended


#COPY miniconda.sh /root
RUN \
    curl -fsSL -v -o ~/miniconda.sh -O "https://repo.anaconda.com/miniconda/Miniconda3-py38_4.12.0-Linux-x86_64.sh" && \
    $sudo chmod +x ~/miniconda.sh && \
    ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    /opt/conda/bin/conda install -y python=${PYTHON_VERSION} \
                                    cmake conda-build pyyaml \
                                    numpy ipython && \

    #/opt/conda/bin/python -mpip install -r requirements.txt && \
    /opt/conda/bin/conda install pytorch==1.11.0 torchvision==0.12.0 \
                                 torchaudio==0.11.0 cudatoolkit=11.3 -c pytorch && \
    pip install opencv-python -i https://pypi.tuna.tsinghua.edu.cn/simple && \
    /opt/conda/bin/conda clean -ya

#COPY environment.yml .
#RUN /opt/conda/bin/conda env create -f environment.yml && \
#    conda init bash
#

ARG ENV_NAME=torch1.7

RUN conda create -n ${ENV_NAME} python=${PYTHON_VERSION} && \
    conda init bash && \
    . ~/.bashrc && \
    conda activate ${ENV_NAME} && \
    conda install pytorch==1.7.0 \
                  torchvision==0.8.1 torchaudio==0.7.0 cudatoolkit=11.0 -c pytorch && \
    pip install opencv-python -i https://pypi.tuna.tsinghua.edu.cn/simple && \
    conda clean -ya

RUN conda init bash

